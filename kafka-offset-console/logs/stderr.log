SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
2016-01-04 15:22:33.659:INFO:oejs.Server:jetty-7.x.y-SNAPSHOT
log4j:WARN No appenders could be found for logger (org.I0Itec.zkclient.ZkConnection).
log4j:WARN Please initialize the log4j system properly.
log4j:WARN See http://logging.apache.org/log4j/1.2/faq.html#noconfig for more info.
2016-01-04 15:22:33.686:INFO:oejsh.ContextHandler:started o.e.j.s.ServletContextHandler{/,jar:file:/kafka-offset-console/KafkaOffsetMonitor-assembly-0.2.0.jar!/offsetapp}
2016-01-04 15:22:33.732:WARN:oejuc.AbstractLifeCycle:FAILED SocketConnector@0.0.0.0:8086:Exception in thread "Timer-0" java.sql.SQLException: [SQLITE_CONSTRAINT]  Abort due to constraint violation (columns group, topic, partition, timestamp are not unique)
	at org.sqlite.DB.newSQLException(DB.java:383)
	at org.sqlite.DB.newSQLException(DB.java:387)
	at org.sqlite.DB.execute(DB.java:342)
	at org.sqlite.DB.executeUpdate(DB.java:363)
	at org.sqlite.PrepStmt.executeUpdate(PrepStmt.java:85)
	at scala.slick.driver.JdbcInvokerComponent$BaseInsertInvoker$$anonfun$internalInsert$1.apply(JdbcInvokerComponent.scala:115)
	at scala.slick.driver.JdbcInvokerComponent$BaseInsertInvoker$$anonfun$internalInsert$1.apply(JdbcInvokerComponent.scala:112)
	at scala.slick.jdbc.JdbcBackend$SessionDef$class.withPreparedStatement(JdbcBackend.scala:161)
	at scala.slick.jdbc.JdbcBackend$BaseSession.withPreparedStatement(JdbcBackend.scala:297)
	at scala.slick.driver.JdbcInvokerComponent$BaseInsertInvoker.prepared(JdbcInvokerComponent.scala:101)
	at scala.slick.driver.JdbcInvokerComponent$BaseInsertInvoker.internalInsert(JdbcInvokerComponent.scala:112)
	at scala.slick.driver.JdbcInvokerComponent$BaseInsertInvoker.insert(JdbcInvokerComponent.scala:104)
	at scala.slick.driver.JdbcInvokerComponent$BaseInsertInvoker$$anonfun$internalInsertAll$1$$anonfun$apply$3.apply(JdbcInvokerComponent.scala:137)
	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:244)
	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:244)
	at scala.collection.Iterator$class.foreach(Iterator.scala:727)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1157)
	at scala.collection.IterableLike$class.foreach(IterableLike.scala:72)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:54)
	at scala.collection.TraversableLike$class.map(TraversableLike.scala:244)
	at scala.collection.AbstractTraversable.map(Traversable.scala:105)
	at scala.slick.driver.JdbcInvokerComponent$BaseInsertInvoker$$anonfun$internalInsertAll$1.apply(JdbcInvokerComponent.scala:137)
	at scala.slick.jdbc.JdbcBackend$BaseSession.withTransaction(JdbcBackend.scala:331)
	at scala.slick.driver.JdbcInvokerComponent$BaseInsertInvoker.internalInsertAll(JdbcInvokerComponent.scala:135)
	at scala.slick.driver.JdbcInvokerComponent$BaseInsertInvoker.insertAll(JdbcInvokerComponent.scala:124)
	at scala.slick.driver.JdbcInvokerComponent$BaseInsertInvoker.$plus$plus$eq(JdbcInvokerComponent.scala:152)
	at com.quantifind.kafka.offsetapp.OffsetDB$$anonfun$insetAll$1.apply(OffsetDB.scala:67)
	at com.quantifind.kafka.offsetapp.OffsetDB$$anonfun$insetAll$1.apply(OffsetDB.scala:66)
	at scala.slick.backend.DatabaseComponent$DatabaseDef$class.withSession(DatabaseComponent.scala:31)
	at scala.slick.jdbc.JdbcBackend$DatabaseFactoryDef$$anon$4.withSession(JdbcBackend.scala:61)
	at com.quantifind.kafka.offsetapp.OffsetDB.insetAll(OffsetDB.scala:65)
	at com.quantifind.kafka.offsetapp.OffsetGetterWeb$$anonfun$writeToDb$1.apply(OffsetGetterWeb.scala:49)
	at com.quantifind.kafka.offsetapp.OffsetGetterWeb$$anonfun$writeToDb$1.apply(OffsetGetterWeb.scala:46)
	at scala.collection.Iterator$class.foreach(Iterator.scala:727)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1157)
	at scala.collection.IterableLike$class.foreach(IterableLike.scala:72)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:54)
	at com.quantifind.kafka.offsetapp.OffsetGetterWeb$.writeToDb(OffsetGetterWeb.scala:45)
	at com.quantifind.kafka.offsetapp.OffsetGetterWeb$$anon$2.run(OffsetGetterWeb.scala:56)
	at java.util.TimerThread.mainLoop(Timer.java:555)
	at java.util.TimerThread.run(Timer.java:505)
l.socketBind(Native Method)
	at java.net.AbstractPlainSocketImpl.bind(AbstractPlainSocketImpl.java:376)
	at java.net.ServerSocket.bind(ServerSocket.java:376)
	at java.net.ServerSocket.<init>(ServerSocket.java:237)
	at org.eclipse.jetty.server.bio.SocketConnector.newServerSocket(SocketConnector.java:91)
	at org.eclipse.jetty.server.bio.SocketConnector.open(SocketConnector.java:80)
	at org.eclipse.jetty.server.AbstractConnector.doStart(AbstractConnector.java:311)
	at org.eclipse.jetty.server.bio.SocketConnector.doStart(SocketConnector.java:151)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:59)
	at org.eclipse.jetty.server.Server.doStart(Server.java:272)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:59)
	at unfiltered.jetty.Server$class.start(servers.scala:86)
	at unfiltered.jetty.Http.start(servers.scala:22)
	at unfiltered.jetty.Http.start(servers.scala:22)
	at unfiltered.util.RunnableServer$class.run(servers.scala:45)
	at unfiltered.jetty.Http.run(servers.scala:22)
	at com.quantifind.utils.UnfilteredWebApp$class.main(UnfilteredWebApp.scala:30)
	at com.quantifind.kafka.offsetapp.OffsetGetterWeb$.main(OffsetGetterWeb.scala:38)
	at com.quantifind.kafka.offsetapp.OffsetGetterWeb$.main(OffsetGetterWeb.scala:38)
	at com.quantifind.sumac.ArgMain$class.mainHelper(ArgApp.scala:39)
	at com.quantifind.sumac.ArgMain$class.main(ArgApp.scala:34)
	at com.quantifind.kafka.offsetapp.OffsetGetterWeb$.main(OffsetGetterWeb.scala:38)
	at com.quantifind.kafka.offsetapp.OffsetGetterWeb.main(OffsetGetterWeb.scala)
